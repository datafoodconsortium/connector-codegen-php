[comment encoding = UTF-8 /]
[module queries('http://www.eclipse.org/uml2/5.0.0/UML')/]

[query public getStereotypeNameAdder(traceabilityContext : OclAny): String = getProperty('stereotypeAdder') /]
[query public getStereotypeNameBlankNode(traceabilityContext : OclAny): String = getProperty('stereotypeBlankNode') /]
[query public getStereotypeNameConstructor(traceabilityContext : OclAny): String = getProperty('stereotypeConstructor') /]
[query public getStereotypeNameExternal(traceabilityContext : OclAny): String = getProperty('stereotypeExternal') /]
[query public getStereotypeNameGetter(traceabilityContext : OclAny): String = getProperty('stereotypeGetter') /]
[query public getStereotypeNameInitializer(traceabilityContext : OclAny): String = getProperty('stereotypeInitializer') /]
[query public getStereotypeNameInitializerParent(traceabilityContext : OclAny): String = getProperty('stereotypeInitializerParent') /]
[query public getStereotypeNameProperty(traceabilityContext : OclAny): String = getProperty('stereotypeProperty') /]
[query public getStereotypeNamePropertyMultiple(traceabilityContext : OclAny): String = getProperty('stereotypePropertyMultiple') /]
[query public getStereotypeNameRemover(traceabilityContext : OclAny): String = getProperty('stereotypeRemover') /]
[query public getStereotypeNameSemantic(traceabilityContext : OclAny): String = getProperty('stereotypeSemantic') /]
[query public getStereotypeNameSetter(traceabilityContext : OclAny): String = getProperty('stereotypeSetter') /]

[query public getStereotypePropertyNameInitializerProperty(traceabilityContext : OclAny): String = getProperty('stereotypeInitializer_property') /]
[query public getStereotypePropertyNameSemanticMap(traceabilityContext : OclAny): String = getProperty('stereotypeSemantic_map') /]

[query public getStereotypeAdder(e: Element): Stereotype = e.getStereotype(getStereotypeNameAdder()) /]
[query public getStereotypeBlankNode(e: Element): Stereotype = e.getStereotype(getStereotypeNameBlankNode()) /]
[query public getStereotypeConstructor(e: Element): Stereotype = e.getStereotype(getStereotypeNameConstructor()) /]
[query public getStereotypeExternal(e: Element): Stereotype = e.getStereotype(getStereotypeNameExternal()) /]
[query public getStereotypeGetter(e: Element): Stereotype = e.getStereotype(getStereotypeNameGetter()) /]
[query public getStereotypeInitializer(e: Element): Stereotype = e.getStereotype(getStereotypeNameInitializer()) /]
[query public getStereotypeInitializerParent(e: Element): Stereotype = e.getStereotype(getStereotypeNameInitializerParent()) /]
[query public getStereotypeProperty(e: Element): Stereotype = e.getStereotype(getStereotypeNameProperty()) /]
[query public getStereotypePropertyMultiple(e: Element): Stereotype = e.getStereotype(getStereotypeNamePropertyMultiple()) /]
[query public getStereotypeRemover(e: Element): Stereotype = e.getStereotype(getStereotypeNameRemover()) /]
[query public getStereotypeSemantic(e: Element): Stereotype = e.getStereotype(getStereotypeNameSemantic()) /]
[query public getStereotypeSetter(e: Element): Stereotype = e.getStereotype(getStereotypeNameSetter()) /]

[query public getStereotypePropertyInitializerProperty(e: Element): Property = e.getValue(e.getStereotypeInitializer(), getStereotypePropertyNameInitializerProperty()) /]
[query public getStereotypePropertySemanticMap(e: Element): String = e.getValue(e.getStereotypeSemantic(), getStereotypePropertyNameSemanticMap()) /]

[query public getPackageImports(model: Model): Set(PackageImport) = model.packageImport /]

[query public getPackages(model: Model): Bag(Package) = model.getPackageImports()->collect(pi: PackageImport | pi.importedPackage) /]

[query public getClassifiers(model: Model): Bag(NamedElement) = model.getPackages()->collect(p: Package | p.ownedMember) /]

[query public getClasses(model: Model): Bag(Class) = model.getClassifiers()->selectByType(Class) /]

[query public getConcreateClasses(model: Model): Bag(Class) = model.getClasses()->select(c: Class | not c.isAbstract) /]

[query public getAbstractClasses(model: Model): Bag(Class) = model.getClasses()->select(c: Class | c.isAbstract) /]

[query public getInterfaces(model: Model): Bag(Interface) = model.getClassifiers()->selectByType(Interface) /]

[query public getImplementations(model: Model, i: Interface): Bag(Class) = model.getConcreateClasses()->select(c: Class | c.getAllImplementedInterfaces()->includes(i)) /]

[query public hasGeneralization(classifier: Classifier): Boolean = not (classifier.generalization->isEmpty()) /]

[query public hasOwnedOperations(aClass: Class): Boolean = not aClass.ownedOperation->isEmpty() /]

[query public getOperations(owner: Class): OrderedSet(Operation) = owner.ownedOperation /]

[query public getConstructors(aClass: Class): OrderedSet(Operation) = aClass.getOperations()->select(o: Operation | o.isConstructor()) /]

[query public hasConstructor(aClass: Class): Boolean = not aClass.getConstructors()->isEmpty() /]

[query public getDefaultConstructor(aClass: Class): Operation = aClass.getConstructors()->at(1) /]

[query public getDefaultConstructorParameters(aClass: Class): OrderedSet(Parameter) = aClass.getDefaultConstructor().ownedParameter /]

[query public getDefaultConstructorParametersInitializer(aClass: Class): OrderedSet(Parameter) = aClass.getDefaultConstructorParameters()->select(p: Parameter | p.isInitializer()) /]

[query public getInitializerProperty(p: Parameter): Property = p.getStereotypePropertyInitializerProperty() /]

[query public getInitializerPropertyGetter(p: Parameter): Operation = p.getInitializerProperty().getGetter() /]

[query public getGetter(property: Property): Operation = null /]

[query public hasStereotype(element: Element, name: String): Boolean = not element.getAppliedStereotypes()->select(s: Stereotype | s.name = name)->isEmpty() /] 

[query public getStereotype(element: Element, stereotype: String): Stereotype = element.getAppliedStereotype(stereotype) /]

[query public getMapping(element: Element): String = element.getStereotypePropertySemanticMap().toString() /]

[query public getParameters(operation: Operation): OrderedSet(Parameter) = operation.ownedParameter /]

[query public getInputParameters(operation: Operation): OrderedSet(Parameter) = operation.getParameters()->select(p: Parameter | p.direction = ParameterDirectionKind::_in) /]

[query public hasInputParameter(operation: Operation): Boolean = not operation.getInputParameters()->isEmpty() /]

[query public getInputParameter(operation: Operation, index: Integer): Parameter = operation.getInputParameters()->at(index) /]

[query public getFirstInputParameter(operation: Operation): Parameter = operation.getInputParameter(1) /]

[query public getAdderInputParameter(operation: Operation): Parameter = operation.getFirstInputParameter() /]

[query public getSetterInputParameter(operation: Operation): Parameter = operation.getFirstInputParameter() /]

[query public getRemoverInputParameter(operation: Operation): Parameter = operation.getFirstInputParameter() /]

[query public getReturnParameters(operation: Operation): OrderedSet(Parameter) = operation.getParameters()->select(p: Parameter | p.direction = ParameterDirectionKind::return) /]

[query public hasReturnParameter(operation: Operation): Boolean = not operation.getReturnParameters()->isEmpty() /]

[query public getReturnParameter(operation: Operation, index: Integer): Parameter = operation.getReturnParameters()->at(index) /]

[query public getFirstReturnParameter(operation: Operation): Parameter = operation.getReturnParameter(1) /]

[query public getUninitializedParentParameters(operation: Operation): OrderedSet(Parameter) = operation.getInputParameters()->select(p: Parameter | not p.isInitializerParent()) /]

[query public hasUninitializedParentParameters(operation: Operation): Boolean = not operation.getUninitializedParentParameters()->isEmpty() /]

[query public getInitializedParentParameters(operation: Operation): OrderedSet(Parameter) = operation.getInputParameters()->select(p: Parameter | p.isInitializerParent()) /]

[query public hasInitializedParentParameters(operation: Operation): Boolean = not operation.getInitializedParentParameters()->isEmpty() /]

[query public isBlankNode(parameter: Parameter): Boolean = if (parameter.type.oclIsTypeOf(Class)) then parameter.type.oclAsType(Class).isBlankNode() else parameter.type.oclAsType(Interface).isBlankNode() endif /]

[query public getTestValues(ps: Sequence(Parameter)): Sequence(String)
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getTestValues(java.util.ArrayList)', Sequence{ps})
/]

[query public createGeneralization(aClass: Class): Boolean
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'createGeneralization(org.eclipse.uml2.uml.Class)', Sequence{aClass})
/]

[query public isAdder(o: Operation): Boolean = o.hasStereotype(getStereotypeNameAdder()) /]
[query public isBlankNode(e: Element): Boolean = e.hasStereotype(getStereotypeNameBlankNode()) /]
[query public isConstructor(o: Operation): Boolean = o.hasStereotype(getStereotypeNameConstructor()) /]
[query public isExternal(e: Element): Boolean = e.hasStereotype(getStereotypeNameExternal())/]
[query public isGetter(o: Operation): Boolean = o.hasStereotype(getStereotypeNameGetter()) /]
[query public isInitializer(p: Parameter): Boolean = p.hasStereotype(getStereotypeNameInitializer()) /]
[query public isInitializerParent(p: Parameter): Boolean = p.hasStereotype(getStereotypeNameInitializerParent()) /]
[query public isProperty(p: Property): Boolean = p.hasStereotype(getStereotypeNameProperty()) /]
[query public isPropertyMultiple(p: Property): Boolean = p.hasStereotype(getStereotypeNamePropertyMultiple()) /]
[query public isRemover(o: Operation): Boolean = o.hasStereotype(getStereotypeNameRemover()) /]
[query public isSemantic(e: Element): Boolean = e.hasStereotype(getStereotypeNameSemantic()) /]
[query public isSetter(o: Operation): Boolean = o.hasStereotype(getStereotypeNameSetter()) /]

[query public isPrimitive(t: Type): Boolean 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'isPrimitive(org.eclipse.uml2.uml.Type)', Sequence{t})
/]

[comment query public hasStereotype(e: Element, s: String): Boolean 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'hasStereotype(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{e, s})
/]

[query public getAttributeForStereotypedOperation(c: Class, s: String, o: String): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getAttributeForStereotypedOperation(org.eclipse.uml2.uml.Class, java.lang.String, java.lang.String)', Sequence{c, s, o})
/]

[query public getConstructorUninitializedAttributes(o: Operation): Sequence(Property)
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getConstructorUninitializedAttributes(org.eclipse.uml2.uml.Operation)', Sequence{o})
/]

[query public getConstructor(c: Class, o: Operation): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getConstructor(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getGetter(c: Class, o: Operation): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getGetter(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getPropertyOfAdder(c: Class, o: Operation): Property 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getPropertyOfAdder(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getPropertyOfGetter(c: Class, o: Operation): Property 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getPropertyOfGetter(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getPropertyOfSetter(c: Class, o: Operation): Property 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getPropertyOfSetter(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getSetter(p: Property): Operation 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getSetter(org.eclipse.uml2.uml.Property)', Sequence{p})
/]

[query public getSetter(c: Class, o: Operation): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getSetter(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getSetter(p: Parameter): Operation 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getSetter(org.eclipse.uml2.uml.Parameter)', Sequence{p})
/]

[query public getAdder(p: Property): Operation 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getAdder(org.eclipse.uml2.uml.Property)', Sequence{p})
/]

[query public getAdder(c: Class, o: Operation): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getAdder(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[query public getAdder(p: Parameter): Operation 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getAdder(org.eclipse.uml2.uml.Parameter)', Sequence{p})
/]

[query public getRemover(c: Class, o: Operation): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getRemover(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Operation)', Sequence{c, o})
/]

[comment query public getGetter(p: Property): String 
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getGetter(org.eclipse.uml2.uml.Property)', Sequence{p})
/]

[query public getUnimplementedOperations(c: Classifier): Sequence(Operation)
	= invoke('org.datafoodconsortium.connector.codegen.common.Common', 'getUnimplementedOperations(org.eclipse.uml2.uml.Classifier)', Sequence{c})
/]